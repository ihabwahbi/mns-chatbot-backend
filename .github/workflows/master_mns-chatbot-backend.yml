# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure Functions: https://aka.ms/python-webapps-actions

name: Build and deploy Python project to Azure Function App - mns-chatbot-backend

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  PYTHON_VERSION: '3.11' # set this to the python version to use (supports 3.6, 3.7, 3.8)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Setup Python packages
        run: |
          mkdir -p .python_packages/lib/site-packages
          pip install -r requirements.txt -t .python_packages/lib/site-packages
          pip install -r requirements.txt  # Also install in venv for verification

      - name: Verify package installation
        run: |
          echo "Checking .python_packages directory:"
          ls -la .python_packages/lib/site-packages/openai
          echo "Verifying openai package installation:"
          python -c "import openai; print(openai.__version__)"

      - name: Zip artifact for deployment
        run: |
          zip release.zip ./* -r
          echo "Checking zip contents for .python_packages:"
          unzip -l release.zip | grep python_packages

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip     
        
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_90C635A592544C1590EB39D8D960A349 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_3462289F04C849C3A190FAE65ADD2852 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1A206C13452D4651BD0CBCBB37BE0DC8 }}

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'mns-chatbot-backend'
          slot-name: 'Production'
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          scm-do-build-during-deployment: true
          enable-oryx-build: true

      - name: 'Verify Deployed Packages'
        run: |
          echo "Checking deployed packages:"
          ls -R .python_packages/lib/site-packages || true
          echo "Current directory content:"
          ls -la